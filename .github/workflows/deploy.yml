name: Deploy Java Spring Boot App (Test)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build project
        run: |
          chmod +x mvnw
          # -U ƒë·ªÉ force update dependency, clean ƒë·ªÉ tr√°nh x√†i l·∫°i artifact c≈©
          ./mvnw -B -U clean package -DskipTests=true

      - name: Copy JAR to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: morbious
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 4455
          source: "target/healthy-food-api-0.0.1-SNAPSHOT.jar"
          target: "/home/morbious/Food/app.jar/target/"
          overwrite: true
          strip_components: 1
          rm: false    

      - name: Restart app and health-check
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: morbious
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 4455
          script_stop: false
          command_timeout: 15m
          script: |
            set -e

            APP_DIR="/home/morbious/Food/app.jar/target"
            JAR_NAME="healthy-food-api-0.0.1-SNAPSHOT.jar"
            JAR_PATH="$APP_DIR/$JAR_NAME"

            echo "üì¶ JAR on server:"
            ls -lh "$JAR_PATH" || true
            stat "$JAR_PATH" || true

            echo "üßπ Stop app on port 8080 if running..."
            if command -v fuser >/dev/null 2>&1; then
              fuser -k -n tcp 8080 || true
            else
              PIDS=$(ss -lptn 'sport = :8080' 2>/dev/null | awk -F',' '/pid=/ {gsub("pid=",""); print $2}' | awk '{print $1}')
              [ -n "$PIDS" ] && kill -9 $PIDS || true
            fi

            echo "‚è≥ Wait a moment for port release..."
            sleep 2

            JAVA_BIN=$(command -v java || echo /usr/bin/java)
            echo "Using JAVA_BIN=$JAVA_BIN"

            echo "üöÄ Start new app..."
            cd "$APP_DIR"
            # ch·∫°y n·ªÅn, ghi log v√†o app.log
            nohup setsid "$JAVA_BIN" -jar "$JAR_NAME" > app.log 2>&1 < /dev/null & disown || true

            echo "‚è≥ Health-check until ready..."
            # D√πng swagger-ui n·∫øu b·∫°n ch∆∞a b·∫≠t actuator/health.
            # N·∫øu ƒë√£ b·∫≠t actuator: ƒë·ªïi URL d∆∞·ªõi n√†y th√†nh http://127.0.0.1:8080/actuator/health
            ATTEMPTS=40
            until curl -fsS "http://127.0.0.1:8080/swagger-ui/index.html" >/dev/null; do
              ATTEMPTS=$((ATTEMPTS-1))
              if [ $ATTEMPTS -le 0 ]; then
                echo "‚ùå Health check failed"
                echo "---- Last 200 lines of app.log ----"
                tail -n 200 app.log || true
                exit 1
              fi
              sleep 3
            done

            echo "‚úÖ Deployed & Healthy"
            echo "---- App process ----"
            ps -o pid,lstart,cmd -p $(pgrep -f "java -jar") || true
            echo "---- Last 50 lines of app.log ----"
            tail -n 50 app.log || true
